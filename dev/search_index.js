var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TensorMarket","category":"page"},{"location":"#TensorMarket","page":"Home","title":"TensorMarket","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is a repository for sparse tensor file storage.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently supporting the following formats:","category":"page"},{"location":"","page":"Home","title":"Home","text":".ttx through ttread() and ttwrite().\nThe .ttx format is a straightforward generalization of .mtx to support arbitrarily many indices. The file should specify tensor instead of matrix, but otherwise is the same. The .ttx format is also supported by the TACO sparse tensor compiler.\n.tns through tnsread() and tnswrite()\nThe .tns format is the format used by the FROSTT tensor collection.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TensorMarket]","category":"page"},{"location":"#TensorMarket.tnsread-Tuple{Any}","page":"Home","title":"TensorMarket.tnsread","text":"tnsread(filename)\n\nRead the contents of the FROSTT .tns file 'filename' into a sparse coordinate list.\n\nCoordinate lists are returned as a tuple of arrays (analogous to findnz()) ((row_coordinates, column_coordinates, ...), values)`\n\nThis format assumes the size of the tensor equals its maximum coordinate in each dimension.\n\nSee also: tnswrite\n\n\n\n\n\n","category":"method"},{"location":"#TensorMarket.tnswrite-Tuple{Any, Any, Any}","page":"Home","title":"TensorMarket.tnswrite","text":"tnswrite(filename, (I_1, I_2, ...), V)\n\nWrite sparse tensor coordinates to file 'filename' in FROSTT .tns format.\n\nCoordinate lists are specified as a tuple of arrays (analogous to findnz()) (I, V) = (row_coordinates, column_coordinates, ...), values)`\n\nThis format assumes the size of the tensor equals its maximum coordinate in each dimension.\n\nSee also: tnsread\n\n\n\n\n\n","category":"method"},{"location":"#TensorMarket.ttread","page":"Home","title":"TensorMarket.ttread","text":"ttread(filename, infoonly::Bool=false, retcoord::Bool=false)\n\nRead the contents of the Tensor Market file 'filename' into a sparse coordinate list or dense array, depending on the Tensor Market format indicated by 'coordinate' (coordinate sparse storage), or 'array' (dense array storage).\n\nCoordinate lists are returned as a tuple of arrays (analogous to findnz()) ((row_coordinates, column_coordinates, ...), values, size)`\n\nIf infoonly is true (default: false), only information on the size and structure is returned from reading the header. The actual data for the matrix elements are not parsed.\n\nIf retcoord is true (default: false), the coordinate and value vectors are returned, if it is a sparse matrix, along with the header information.\n\nSee also: ttwrite\n\n\n\n\n\n","category":"function"},{"location":"#TensorMarket.ttwrite-NTuple{4, Any}","page":"Home","title":"TensorMarket.ttwrite","text":"ttwrite(filename, (I_1, I_2, ...), V, size)\n\nWrite sparse tensor coordinates to file 'filename' in TensorMarket format.\n\nCoordinate lists are specified as a tuple of arrays (analogous to findnz()) (I, V) = (row_coordinates, column_coordinates, ...), values)`\n\nSee also: ttread\n\n\n\n\n\n","category":"method"}]
}
